// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(uuid())
  username  String       @unique
  password  String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  birthday  DateTime?
  bio       String?
  chats     ChatMember[]
  messages  Message[]
}

model Chat {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members  ChatMember[]
  messages Message[]
}

model ChatMember {
  id       String   @id @default(uuid())
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  chat     Chat     @relation(fields: [chatId], references: [id])
  chatId   String
  role     String   @default("member")
  joinedAt DateTime @default(now())

  @@unique([userId, chatId])
}

model Message {
  id        String   @id @default(uuid())
  text      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  chat   Chat   @relation(fields: [chatId], references: [id])
  chatId String

  files FileAttachment[]
}

model FileAttachment {
  id        String  @id @default(uuid())
  url       String // ссылка на файл (например, S3 / локальное хранилище)
  type      String // mime-type (image/png, video/mp4 и т.п.)
  size      Int // размер в байтах
  message   Message @relation(fields: [messageId], references: [id])
  messageId String
}
